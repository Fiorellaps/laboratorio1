{"id":"src/index.js","dependencies":[{"name":"D:\\fiore\\mis documetos\\lemoncode master\\bootcamp js\\9_async\\practica\\package.json","includedInParent":true,"mtime":1626967476062},{"name":"axios","loc":{"line":96,"column":18},"parent":"D:\\fiore\\mis documetos\\lemoncode master\\bootcamp js\\9_async\\practica\\src\\index.js","resolved":"D:\\fiore\\mis documetos\\lemoncode master\\bootcamp js\\9_async\\practica\\node_modules\\axios\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n_axios.default.get(\"https://api.github.com/orgs/lemoncode/members\").then(function (response) {\n  return response.data;\n}).then(function (data) {\n  var _iterator = _createForOfIteratorHelper(data),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      item2 = _step.value;\n      document.write(item2.login);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"name":"axios","generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"name":"get","generated":{"line":13,"column":15},"source":"src/index.js","original":{"line":97,"column":6}},{"generated":{"line":13,"column":18},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":13,"column":19},"source":"src/index.js","original":{"line":97,"column":10}},{"generated":{"line":13,"column":66},"source":"src/index.js","original":{"line":97,"column":0}},{"name":"then","generated":{"line":13,"column":68},"source":"src/index.js","original":{"line":97,"column":59}},{"generated":{"line":13,"column":72},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":13,"column":73},"source":"src/index.js","original":{"line":97,"column":64}},{"name":"response","generated":{"line":13,"column":83},"source":"src/index.js","original":{"line":97,"column":64}},{"generated":{"line":13,"column":91},"source":"src/index.js","original":{"line":97,"column":72}},{"generated":{"line":13,"column":93},"source":"src/index.js","original":{"line":97,"column":76}},{"generated":{"line":14,"column":0},"source":"src/index.js","original":{"line":98,"column":4}},{"name":"response","generated":{"line":14,"column":9},"source":"src/index.js","original":{"line":98,"column":11}},{"generated":{"line":14,"column":17},"source":"src/index.js","original":{"line":98,"column":19}},{"name":"data","generated":{"line":14,"column":18},"source":"src/index.js","original":{"line":98,"column":20}},{"generated":{"line":14,"column":22},"source":"src/index.js","original":{"line":98,"column":4}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":99,"column":1}},{"generated":{"line":15,"column":1},"source":"src/index.js","original":{"line":97,"column":0}},{"name":"then","generated":{"line":15,"column":3},"source":"src/index.js","original":{"line":99,"column":3}},{"generated":{"line":15,"column":7},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":15,"column":8},"source":"src/index.js","original":{"line":99,"column":8}},{"name":"data","generated":{"line":15,"column":18},"source":"src/index.js","original":{"line":99,"column":8}},{"generated":{"line":15,"column":22},"source":"src/index.js","original":{"line":99,"column":12}},{"generated":{"line":15,"column":24},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"name":"data","generated":{"line":16,"column":45},"source":"src/index.js","original":{"line":100,"column":18}},{"generated":{"line":16,"column":49},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":100,"column":4}},{"generated":{"line":20,"column":56},"source":"src/index.js","original":{"line":100,"column":24}},{"name":"item2","generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":100,"column":9}},{"name":"item2","generated":{"line":21,"column":6},"source":"src/index.js","original":{"line":100,"column":9}},{"generated":{"line":21,"column":11},"source":"src/index.js","original":{"line":100,"column":24}},{"name":"document","generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":101,"column":8}},{"name":"document","generated":{"line":22,"column":6},"source":"src/index.js","original":{"line":101,"column":8}},{"generated":{"line":22,"column":14},"source":"src/index.js","original":{"line":101,"column":16}},{"name":"write","generated":{"line":22,"column":15},"source":"src/index.js","original":{"line":101,"column":17}},{"generated":{"line":22,"column":20},"source":"src/index.js","original":{"line":101,"column":8}},{"name":"item2","generated":{"line":22,"column":21},"source":"src/index.js","original":{"line":101,"column":23}},{"generated":{"line":22,"column":26},"source":"src/index.js","original":{"line":101,"column":28}},{"name":"login","generated":{"line":22,"column":27},"source":"src/index.js","original":{"line":101,"column":29}},{"generated":{"line":22,"column":32},"source":"src/index.js","original":{"line":101,"column":8}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":102,"column":5}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":26,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":99,"column":16}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":103,"column":1}},{"generated":{"line":29,"column":1},"source":"src/index.js","original":{"line":97,"column":0}}],"sources":{"src/index.js":"/*setTimeout(function() {\r\n    alert(\"Hola después de 1 segundo\");\r\n}, 1000);\r\n\r\nconst myCallback = () => alert(\"Hola después de 1 segundo\");\r\nsetTimeout(myCallback, 1000);\r\n\r\nsetTimeout(() => alert(\"Hola después de 1 segundo\"), 1000);\r\n\r\n\r\nconst myPromise = new Promise((resolve, reject) => {\r\n    resolve(\"Hola, esto es la respuesta correcta de la promesa :)\");\r\n});\r\n// si hacemos .then significa que se ha llegado a resolve\r\nmyPromise.then(result => {\r\n    alert(result);\r\n});\r\n\r\n\r\n\r\nconst myPromise = new Promise((resolve, reject) => {\r\n    setTimeout(function() {\r\n        resolve(\"Hola, esto es la respuesta correcta de la promesa :)\");\r\n    }, 3000)\r\n});\r\n\r\nmyPromise.then(result => {\r\n    alert(result);\r\n});\r\n\r\nconst myPromise = new Promise((resolve, reject) => {\r\n    setTimeout(function() {\r\n        reject(\"Error dentro de la promesa\");\r\n    }, 3000)\r\n});\r\n\r\n\r\n//Then para resove ; catch para reject\r\nmyPromise.then(result => {\r\n    alert(result);\r\n}).catch(error => {\r\n    alert(\"Se ha producido un error en la promesa: \" + error);\r\n});\r\n\r\n\r\nconst myPromise = new Promise((resolve, reject) => {\r\n    const currentDay = new Date().getDate();\r\n    if (currentDay === 1) {\r\n        reject(\"Error dentro de la promesa\");\r\n    } else if (currentDay < 15) {\r\n        resolve(\"Estamos en la primera quincena\");\r\n    } else {\r\n        resolve(\"Estamos en la segunda quincena\");\r\n\r\n    }\r\n});\r\n\r\nmyPromise.then(result => {\r\n    return \" correcto: \" + result;\r\n}).then(result2 => {\r\n    alert(result2);\r\n}).catch(error => {\r\n    alert(\"Se ha producido un error en la promesa: \" + error);\r\n});\r\n\r\n\r\nmyPromise.then(result => {\r\n    const mySecondPromise = new Promise(resolve => {\r\n        setTimeout(function() {\r\n            resolve(\"La promesa se ha devuelto: \" + result);\r\n        }, 1000)\r\n    })\r\n    return mySecondPromise;\r\n}).then(result2 => {\r\n    alert(result2);\r\n}).catch(error => {\r\n    alert(\"Se ha producido un error en la promesa: \" + error);\r\n});\r\n\r\n*/\r\n// para obtener datos a URL del servidir\r\n/*\r\nfetch(\"https://api.github.com/orgs/lemoncode/members\").then(response => {\r\n    return response.json();\r\n}).then(data => {\r\n    for (item of data) {\r\n        document.write(item.login);\r\n\r\n    }\r\n}).catch(error => {\r\n    document.write(\"Se ha producido un error\")\r\n});\r\n*/\r\n// AXIOS --> trabajar peticiones a un servidor\r\n\r\nimport axios from \"axios\";\r\naxios.get(\"https://api.github.com/orgs/lemoncode/members\").then(response => {\r\n    return response.data\r\n}).then(data => {\r\n    for (item2 of data) {\r\n        document.write(item2.login);\r\n    }\r\n});"},"lineCount":null}},"error":null,"hash":"d8b9d6725faaf0169f3efffd503940b1","cacheData":{"env":{}}}